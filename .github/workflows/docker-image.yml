name: Docker Image CI

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to build against'
        required: true
        default: 'warning'
        type: choice
        options:
        - dev
        - release
  push:
    branches:
      - 'main'
      - 'EN-*'
  # pull_request:
  #   branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      ENVIRONMENT: ${{ inputs.environment }}
      NAME: ustreamgen
      DOCKERREPO: hooray4rob
      GHCRREPO: hooray4me
      TAG: v${{ secrets.MAJOR }}.${{ secrets.MINOR }}-dev
    steps:
    - name: Set Environment
      id: setDefaults
      if: ${{ env.ENVIRONMENT == ''}}
      run: echo "ENVIRONMENT=dev" >> $GITHUB_ENV

    - name: Set Tag
      id: setTag
      if: ${{ env.ENVIRONMENT == 'release'}}
      run: echo "TAG=v${{ secrets.MAJOR }}.${{ secrets.MINOR }}" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{secrets.DOCKER_USER}}
        password: ${{secrets.DOCKER_PASSWORD}}

    - name: Build Revision
      run: docker build . --tag ${{ env.DOCKERREPO }}/${{ env.NAME }}:${{ env.TAG }}

    - name: Push Revision
      run: docker push ${{ env.DOCKERREPO }}/${{ env.NAME }}:${{ env.TAG }}

    - name: Tag latest
      if: ${{ env.ENVIRONMENT == 'release'}}
      run: docker tag ${{ env.DOCKERREPO }}/${{ env.NAME }}:${{ env.TAG }} ${{ env.DOCKERREPO }}/${{ env.NAME }}:latest

    - name: Push latest
      if: ${{ env.ENVIRONMENT == 'release'}}
      run: docker push ${{ env.DOCKERREPO }}/${{ env.NAME }}:latest

    - name: Tag Revision for github
      run: docker tag ${{ env.DOCKERREPO }}/${{ env.NAME }}:${{ env.TAG }} ghcr.io/${{ env.GHCRREPO }}/${{ env.NAME }}:${{ env.TAG }}

    - name: Tag Latest for github
      if: ${{ env.ENVIRONMENT == 'release'}}
      run: docker tag ${{ env.DOCKERREPO }}/${{ env.NAME }}:${{ env.TAG }} ghcr.io/${{ env.GHCRREPO }}/${{ env.NAME }}:latest

    - name: Login to github
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        logout: false

    - name: Push Revision to github
      run: docker push ghcr.io/${{ env.GHCRREPO }}/${{ env.NAME }}:${{ env.TAG }}

    - name: Push Latest to github
      if: ${{ env.ENVIRONMENT == 'release'}}
      run: docker push ghcr.io/${{ env.GHCRREPO }}/${{ env.NAME }}:latest

    - name: Create production release
      if: ${{ env.ENVIRONMENT == 'release'}}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ env.NAME }}.${{ env.TAG }}
        tag_name: ${{ env.TAG }}

    - name: Update Minor Version
      uses: hmanzur/actions-set-secret@v2.0.0
      with:
        name: 'MINOR'
        value: $(${{ secrets.MINOR }}+1)
        repository: ${{ env.GHCRREPO }}/${{ env.NAME }}
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
